=el_data_dsv_parse_line=
<syntaxhighlight lang="c">
int el_data_dsv_parse_line(el_data* dp, char* line);
</syntaxhighlight>

==Description==
Parses a line of delimiter-separated values.

==Parameters==
;el_data* dp
:A pointer to a valid el_data structure.
;char* line
:A valid C-string containing the line to parse.

==Returns==
*On success: 1.
*On error: 0.

==Remarks==
This function fills in the necessary structures, allowing you to use the get_field and count_fields functions to retrieve the data.

The parser treats all characters as is, apart from the following:
*All invalid characters are ignored. Invalid characters include:
**Nonprintables (ASCII 0-31, excluding tab, and 127).
**Extended ASCII (anything above 127).
*The delimiter usually signals the end of one field and the start of another. However, it stands alone if used in a quoted string.
*Valid escape sequences are escaped according to configured rules.
*Invalid escape sequences are either rendered as is or ignored, according to configured rules.
